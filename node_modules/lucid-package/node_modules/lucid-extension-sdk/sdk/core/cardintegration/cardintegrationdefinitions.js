"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeCardFieldArrayDefinition = exports.deserializeCardFieldDefinition = exports.isSerializedExtensionCardFieldDefinition = exports.isSerializedFieldConstraint = exports.isSerializedFieldOptions = exports.isSerializedFieldOption = exports.deserializeFieldOption = exports.serializeCardFieldArrayDefinition = exports.serializeCardFieldDefinition = exports.serializeCardFieldOption = void 0;
const schemadefinition_1 = require("../../data/schemadefinition");
const checks_1 = require("../checks");
const fieldtypedefinition_1 = require("../data/fieldtypedefinition/fieldtypedefinition");
const serializedfielddefinition_1 = require("../data/serializedfield/serializedfielddefinition");
const serializedfields_1 = require("../data/serializedfield/serializedfields");
const validators_1 = require("../validators/validators");
/** @ignore */
function serializeCardFieldOption(option) {
    return {
        'l': option.label,
        'v': option.value,
    };
}
exports.serializeCardFieldOption = serializeCardFieldOption;
/** @ignore */
function serializeCardFieldDefinition(field) {
    var _a;
    return Object.assign(Object.assign({}, (0, schemadefinition_1.serializeFieldDefinition)(field)), { 'l': field.label, 'def': field.default, 'd': field.description, 'op': (0, checks_1.isString)(field.options) ? field.options : (_a = field.options) === null || _a === void 0 ? void 0 : _a.map(serializeCardFieldOption), 's': field.search });
}
exports.serializeCardFieldDefinition = serializeCardFieldDefinition;
/** @ignore */
function serializeCardFieldArrayDefinition(fields) {
    return fields.map(serializeCardFieldDefinition);
}
exports.serializeCardFieldArrayDefinition = serializeCardFieldArrayDefinition;
/** @ignore */
function deserializeFieldOption(option) {
    return {
        label: option['l'],
        value: option['v'],
    };
}
exports.deserializeFieldOption = deserializeFieldOption;
exports.isSerializedFieldOption = (0, validators_1.objectValidator)({
    'l': checks_1.isString,
    'v': serializedfields_1.isSerializedFieldType,
});
exports.isSerializedFieldOptions = (0, validators_1.arrayValidator)(exports.isSerializedFieldOption);
exports.isSerializedFieldConstraint = (0, validators_1.objectValidator)({
    'Type': (0, validators_1.enumValidator)(serializedfielddefinition_1.FieldConstraintType),
    'Details': (0, validators_1.option)(checks_1.isNumber),
});
/** @ignore */
exports.isSerializedExtensionCardFieldDefinition = (0, validators_1.objectValidator)({
    'Name': checks_1.isString,
    'Type': fieldtypedefinition_1.isSerializedFieldTypeDefinition,
    'Constraints': (0, validators_1.option)((0, validators_1.arrayValidator)(exports.isSerializedFieldConstraint)),
    'l': checks_1.isString,
    'd': (0, validators_1.option)(checks_1.isString),
    'def': (0, validators_1.option)(serializedfields_1.isSerializedFieldType),
    'op': (0, validators_1.option)((0, validators_1.either)(checks_1.isString, (0, validators_1.arrayValidator)(exports.isSerializedFieldOption))),
    's': (0, validators_1.option)(checks_1.isString),
});
/** @ignore */
function deserializeCardFieldDefinition(field) {
    var _a;
    return Object.assign(Object.assign({}, (0, schemadefinition_1.parseFieldDefinition)(field)), { label: field['l'], description: field['d'], default: field['def'], options: (0, checks_1.isString)(field['op']) ? field['op'] : (_a = field['op']) === null || _a === void 0 ? void 0 : _a.map(deserializeFieldOption), search: field['s'] });
}
exports.deserializeCardFieldDefinition = deserializeCardFieldDefinition;
/** @ignore */
function deserializeCardFieldArrayDefinition(fields) {
    return fields.map(deserializeCardFieldDefinition);
}
exports.deserializeCardFieldArrayDefinition = deserializeCardFieldArrayDefinition;
