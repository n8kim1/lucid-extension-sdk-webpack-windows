import { EditorClient } from '../editorclient';
export declare enum MenuType {
    Main = 1,
    /** The context menu that appears when the user right-clicks the canvas. */
    Context = 2
}
/**
 * Semantic locations to place a new menu item.
 */
export declare enum MenuLocation {
    /** Default location: a new top-level menu entry for this extension, or the end of the context menu */
    Extension = 1,
    Edit = 2,
    View = 3,
    Share = 4,
    Export = 5,
    Import = 6
}
export interface CustomMenuItem {
    /** The text to display on the menu item */
    label: string;
    /** The registered action to run when the menu item is clicked */
    action?: string;
    /** If specified, what action's return value should determine if this menu item is visible? */
    visibleAction?: string;
    /** If specified, what action's return value should determine if this menu item is disabled? */
    disabledAction?: string;
    /** Which menu to display this item in */
    menuType: MenuType;
    /** Where in that menu to display this item */
    location?: MenuLocation;
    /** If specified, this menu item should launch a file picker */
    file?: {
        /** An action registered with EditorClient.registerFileUploadAction */
        action: string;
        /** An [accept string](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept) as specified for HTML file inputs */
        accept: string;
        /** If true, only allow a single file to be selected for upload */
        singleFileOnly?: boolean;
        /** If true, send the file contents to the callback action as a Uint8Array as well as a plain text string */
        binary?: boolean;
    };
}
export interface FileUploadData {
    fileName: string;
    text: string;
    binary?: Uint8Array;
}
export declare class Menu {
    private readonly client;
    constructor(client: EditorClient);
    /**
     * Add a new menu item to execute custom code. The action must be registered with
     * [EditorClient.registerAction](/extension-sdk/#classes_editorclient-EditorClient_registeraction)
     * prior to using it in the menu.
     *
     * @param item The definition of the new menu item
     */
    addMenuItem(item: CustomMenuItem): void;
}
