import { BlockProxy } from './blockproxy';
import { LineProxy } from './lineproxy';
export interface EndpointStyle {
    /** Omit to use defaults (theme) */
    style?: string;
}
/**
 * A line endpoint connected to another block
 */
export interface BlockEndpointDefinition extends EndpointStyle {
    connection: BlockProxy;
    /** 0 to 1, relative X position in target block's bounding box */
    linkX: number;
    /** 0 to 1, relative Y position in target block's bounding box */
    linkY: number;
    /** If true, the connection isn't to the edge of the target block, but inside it */
    inside?: boolean;
    /** If true, this endpoint may move around the target block in order to make the line less complex */
    autoLink?: boolean;
    /** If set, the distance from the connected block this endpoint should be */
    padding?: number;
}
/**
 * A line endpoint that is connected to another line at some distance along that other
 * line, where 0 is at that line's endpoint1, and 1 is at that line's endpoint2.
 */
export interface LineEndpointDefinition extends EndpointStyle {
    connection: LineProxy;
    /** 0 to 1, distance along the target line */
    position: number;
}
/**
 * A line endpoint that is free-floating at the given x/y location on the page
 */
export interface PositionEndpointDefinition extends EndpointStyle {
    connection?: void;
    x: number;
    y: number;
}
/**
 * The definition of one line endpoint, which may be free-floating at a given location, or attached
 * to another block or line
 */
export declare type EndpointDefinition = BlockEndpointDefinition | LineEndpointDefinition | PositionEndpointDefinition;
/**
 * The information required in order to create a new line
 */
export interface LineDefinition {
    endpoint1: EndpointDefinition;
    endpoint2: EndpointDefinition;
}
