export interface LineTextAreaPositioning {
    /**
     * A number between 0 and 1 representing how far this text lies along the line, where 0 puts the text
     * at the same location as the first endpoint, and 1 puts the text at the same location as the second
     * endpoint.
     */
    location: number;
    /**
     * Which side of the line the text is displayed on. If zero, the text is on top of the line. If -1,
     * the text is to the left of the line as you travel from the first to second endpoints. If 1, the
     * text is to the right of the line as you travel from the first to second endpoints.
     */
    side: -1 | 0 | 1;
    /**
     * Normally text on a line is not allowed to overlap a block that is connected to either end of the
     * line. If `allowOverBlock` is true, then the text is allowed to overlap an attached block.
     */
    allowOverBlock?: boolean;
}
/** @ignore */
export declare type SerializedLineTextAreaPositioning = {
    'Location': number;
    'Side': -1 | 0 | 1;
    'AllowOverBlock'?: boolean;
};
/** @ignore */
export declare function isSerializedLineTextAreaPositioning(raw: unknown): raw is SerializedLineTextAreaPositioning;
/** @ignore */
export declare function deserializeLineTextAreaPositioning(raw: SerializedLineTextAreaPositioning): LineTextAreaPositioning;
/** @ignore */
export declare function serializeLineTextAreaPositioning(data: LineTextAreaPositioning): SerializedLineTextAreaPositioning;
