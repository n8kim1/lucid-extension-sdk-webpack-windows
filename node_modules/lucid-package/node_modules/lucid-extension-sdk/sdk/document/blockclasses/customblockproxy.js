"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomBlockProxy = void 0;
const checks_1 = require("../../core/checks");
const blockproxy_1 = require("../blockproxy");
class CustomBlockProxy extends blockproxy_1.BlockProxy {
    isFromStencil(library, shape) {
        const stencil = this.properties.get('Stencil');
        if ((0, checks_1.isObject)(stencil)) {
            const sourceStencil = this.client.sendCommand("gp" /* CommandName.GetProperty */, { 'p': 'Stencil-' + stencil['id'] });
            if ((0, checks_1.isObject)(sourceStencil) && (0, checks_1.isObject)(sourceStencil['sourcePackage'])) {
                return (sourceStencil['sourcePackage']['packageId'] === lucid.getPackageId() &&
                    sourceStencil['sourcePackage']['library'] === library &&
                    sourceStencil['sourcePackage']['shape'] === shape);
            }
        }
        return false;
    }
    getStencilTextAreaName(stencilTextAreaName) {
        return this.textAreas.keys().find((name) => name.endsWith('_' + stencilTextAreaName));
    }
}
exports.CustomBlockProxy = CustomBlockProxy;
CustomBlockProxy.classNameRegex = /^CustomBlock$/;
