import { EditorClient } from '../editorclient';
import { BlockDefinition } from './blockdefinition';
import { BlockProxy } from './blockproxy';
import { ElementProxy } from './elementproxy';
import { GroupProxy } from './groupproxy';
import { LineDefinition } from './linedefinition';
import { LineProxy } from './lineproxy';
import { MapProxy } from './mapproxy';
/**
 * One page in the current Lucid document
 */
export declare class PageProxy extends ElementProxy {
    readonly id: string;
    /**
     * @param id The ID of this page
     * @param client
     */
    constructor(id: string, client: EditorClient);
    /**
     * The blocks contained directly on this page, not including ones inside groups
     */
    readonly blocks: MapProxy<string, BlockProxy>;
    /**
     * The lines contained directly on this page, not including ones inside groups
     */
    readonly lines: MapProxy<string, LineProxy>;
    /**
     * The groups contained directly on this page, not including ones inside groups
     */
    readonly groups: MapProxy<string, GroupProxy>;
    /**
     * The blocks contained on this page, including ones inside groups
     */
    readonly allBlocks: MapProxy<string, BlockProxy>;
    /**
     * The lines contained on this page, including ones inside groups
     */
    readonly allLines: MapProxy<string, LineProxy>;
    /**
     * The groups contained on this page, including ones inside groups
     */
    readonly allGroups: MapProxy<string, GroupProxy>;
    /**
     * Add a new block to this page.
     *
     * IMPORTANT: Because code for block classes are loaded incrementally, you MUST call
     * EditorClient.loadBlockClasses with the given block class name (and wait for it to
     * resolve) before attempting to create a block. If you don't, an error will be thrown.
     *
     * @param def The definition of the new block to add
     * @returns The added block
     */
    addBlock(def: BlockDefinition): BlockProxy;
    /**
     * Add a new line to this page
     * @param def The definition of the new line to add
     * @returns The added line
     */
    addLine(def: LineDefinition): LineProxy;
    /**
     * Updates the page of this page
     * @param title The new title for this page
     */
    setTitle(title: string): void;
    /**
     * @returns the title of this page
     */
    getTitle(): string;
    /**
     * Delete this page from the document if possible
     */
    delete(): void;
}
