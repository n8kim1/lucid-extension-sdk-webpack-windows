import { DataConnector } from './dataconnector';
/** @ignore */
export declare type ExpressLike = {
    raw: (a: {
        type: () => boolean;
    }) => unknown;
} & (() => ExpressAppLike);
/** @ignore */
export declare type ExpressAppLike = {
    use: (a: unknown) => unknown;
    post: (a: string, b: (req: {
        query: Record<string, string>;
        url: string;
        headers: Record<string, string | string[] | undefined>;
        body: object;
    }, res: {
        send: (x: unknown) => unknown;
        setHeader: (x: string, y: string) => unknown;
        status: (n: number) => {
            json: (x: unknown) => unknown;
            end: () => unknown;
        };
    }) => Promise<void>) => unknown;
    listen: (port: number | string, x: () => unknown) => unknown;
};
/**
 * Options for how to run the debug server
 */
export declare type RunDebugServerOptions = {
    /** prefix for the debug server routes. Useful if you want to distinguish different data connectors */
    prefix?: string;
    /** The port to listen on */
    port?: number;
    /** We don't want to have the lucid-extension-sdk depend on express. You can pass the imported express modules here */
    express: ExpressLike;
    /** The app you want to route your debug server on. If you leave this undefined, we'll create one */
    app?: ExpressAppLike;
};
/** @ignore */
export declare function routeDebugServer(dataConnector: DataConnector, options: RunDebugServerOptions): ExpressAppLike;
/** @ignore */
export declare function runDebugServer(dataConnector: DataConnector, options: RunDebugServerOptions): void;
