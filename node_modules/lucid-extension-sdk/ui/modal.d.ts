import { EditorClient } from '../editorclient';
import { IframeUI } from './iframeui';
/**
 * Configuration required to display a [Modal](#classes_ui_modal-Modal).
 */
export type ModalConfig = ({
    /** Content to display in the modal's iframe. This is set as the srcdoc on a sandboxed iframe. */
    content: string;
    /** URL to load in the iframe. Can be either an absolute URL or one relative to the /public directory in this package */
    url?: never;
} | {
    /** Content to display in the modal's iframe. This is set as the srcdoc on a sandboxed iframe. */
    content?: never;
    /** URL to load in the iframe. Can be either an absolute URL or one relative to the /public directory in this package */
    url: string;
}) & ({
    /** Title to display in the header bar of the modal. */
    title: string;
    /** If true, the header bar won't display (and no title is needed). */
    chromeless?: false | never;
} | {
    /** Title to display in the header bar of the modal. */
    title?: never;
    /** If true, the header bar won't display (and no title is needed). */
    chromeless: true;
}) & ({
    /** Requested width of the modal, in pixels. Depending on window size, this may not be honored exactly. */
    width: number;
    /** Requested height of the modal, in pixels. Depending on window size, this may not be honored exactly. */
    height: number;
    /** If true, the modal will take up the entire window, and won't need a width and height */
    fullScreen?: false | never;
    /** If true, the background of modal will be transparent. */
    transparentBackground?: false | never;
} | {
    /** Requested width of the modal, in pixels. Depending on window size, this may not be honored exactly. */
    width?: never;
    /** Requested height of the modal, in pixels. Depending on window size, this may not be honored exactly. */
    height?: never;
    /** If true, the modal will take up the entire window, and won't need a width and height */
    fullScreen: true;
    /** If true, the background of modal will be transparent. */
    transparentBackground?: boolean;
});
/**
 * Extend this class to show a custom modal to the user, whose contents are displayed in a sandboxed
 * iframe controlled by your extension.
 *
 * To pass a message to a script running in the modal, call sendMessage. The data you pass in will be
 * sent to the iframe with window.postMessage.
 *
 * To pass messages back from the modal to this class, call parent.postMessage from within the iframe.
 * The data sent will be passed along to the messageFromFrame implementation on your Modal class.
 */
export declare abstract class Modal extends IframeUI {
    private readonly config;
    private visible;
    constructor(client: EditorClient, config: ModalConfig);
    protected frameClosed(): void;
    show(): Promise<void>;
    /**
     * If this modal is currently visible, close it, destroying the iframe.
     */
    hide(): void;
}
