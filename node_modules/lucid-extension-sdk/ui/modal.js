"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modal = void 0;
const iframeui_1 = require("./iframeui");
/**
 * Extend this class to show a custom modal to the user, whose contents are displayed in a sandboxed
 * iframe controlled by your extension.
 *
 * To pass a message to a script running in the modal, call sendMessage. The data you pass in will be
 * sent to the iframe with window.postMessage.
 *
 * To pass messages back from the modal to this class, call parent.postMessage from within the iframe.
 * The data sent will be passed along to the messageFromFrame implementation on your Modal class.
 */
class Modal extends iframeui_1.IframeUI {
    constructor(client, config) {
        super(client);
        this.config = config;
        this.visible = false;
    }
    frameClosed() {
        this.visible = false;
        this.unhookMessages();
    }
    async show() {
        if (!this.visible) {
            this.hookMessages();
            await this.client.sendCommand("sm" /* CommandName.ShowModal */, {
                'n': this.messageActionName,
                't': this.config.title,
                'w': this.config.width,
                'h': this.config.height,
                'cl': this.config.chromeless,
                'fs': this.config.fullScreen,
                'tb': this.config.transparentBackground,
                'c': this.config.content,
                'u': this.config.url,
            });
            this.visible = true;
        }
    }
    /**
     * If this modal is currently visible, close it, destroying the iframe.
     */
    hide() {
        if (this.visible) {
            this.client.sendCommand("hm" /* CommandName.HideModal */, { 'n': this.messageActionName });
            this.visible = false;
        }
    }
}
exports.Modal = Modal;
