/**
 * Object that represesnts the parameters on a Custom Quick Action's callbacks
 * @param 'id' is the id of the hooked callback
 * @param 'bid' is the id of the block that is being interacted with
 */
export type CustomQuickActionCallbackParams = {
    'id': string;
    'bid': string;
};
/**
 * Function that represents a callback to be used by the Custom Quick Action
 */
export type CustomQuickActionCallbackWithParams = (params: CustomQuickActionCallbackParams) => boolean;
/**
 * Function that represents a callback to be used by the Custom Quick Action
 */
export type CustomQuickActionCallback = () => boolean;
/**
 * A generic object to contain any information creating a quick action might need.
 */
export interface CustomQuickAction {
    /**
     * Each quick action needs a type so that we can differentiate them from the others
     */
    quickActionType: string;
    /**
     * The text to display on the quick action. The maximum length supported is 30 characters
     */
    label: string;
    /**
     * The callback to run when the quick action is clicked.
     * @returns true if the action was handled.
     */
    action: CustomQuickActionCallbackWithParams;
    /**
     * The icon to display on the quick action.
     * A URL (a data URI is fine) pointing to an icon representing the integration.
     * This will be displayed at up to 24x24 pixels in size.
     */
    iconUrl?: string;
    /**
     * If specified, a callback that determines if this quick action is enabled.
     * @returns true if the Quick Action is enabled.
     * Quick Action defaults to disabled if callback is not provided
     */
    enabledAction?: CustomQuickActionCallbackWithParams | undefined;
    /**
     * If specified, a calback that determines if this Quick Action is visible in the menu.
     * @returns true if the Quick Action is visible.
     * Quick action defaults to visible in the panel if callback is not provided
     */
    visibleAction?: CustomQuickActionCallback | undefined;
    /**
     * Information on when to display tooltips and what they should say
     */
    tooltips?: QuickActionTooltip[];
}
/**
 * A generic object to contain any information displaying a Custom Quick Action tooltip might need.
 */
export interface QuickActionTooltip {
    /**
     * If specified, a calback that determines if the tooltip should show.
     * @returns true if the tooltip should show
     * Tooltip is always shown if the call is not provided
     */
    action?: CustomQuickActionCallbackWithParams | undefined;
    /**
     * The text to display on the tooltip
     */
    label: string;
}
