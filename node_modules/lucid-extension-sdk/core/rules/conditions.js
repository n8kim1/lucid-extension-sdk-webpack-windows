"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainmentConditions = exports.ConnectedShapesCondition = exports.ShapeTypeConditions = exports.ShapeDataConditions = exports.TextConditions = exports.ConditionCombination = void 0;
var ConditionCombination;
(function (ConditionCombination) {
    ConditionCombination["AND"] = "AND";
    ConditionCombination["OR"] = "OR";
})(ConditionCombination || (exports.ConditionCombination = ConditionCombination = {}));
var TextConditions;
(function (TextConditions) {
    TextConditions[TextConditions["TextEmpty"] = 0] = "TextEmpty";
    TextConditions[TextConditions["TextNotEmpty"] = 1] = "TextNotEmpty";
    TextConditions[TextConditions["TextContains"] = 2] = "TextContains";
    TextConditions[TextConditions["TextDoesNotContain"] = 3] = "TextDoesNotContain";
    TextConditions[TextConditions["GreaterThan"] = 8] = "GreaterThan";
    TextConditions[TextConditions["GreaterThanOrEqual"] = 9] = "GreaterThanOrEqual";
    TextConditions[TextConditions["LessThan"] = 10] = "LessThan";
    TextConditions[TextConditions["LessThanOrEqual"] = 11] = "LessThanOrEqual";
    TextConditions[TextConditions["Equal"] = 12] = "Equal";
    TextConditions[TextConditions["NotEqual"] = 13] = "NotEqual";
    TextConditions[TextConditions["Between"] = 14] = "Between";
    TextConditions[TextConditions["NotBetween"] = 15] = "NotBetween";
})(TextConditions || (exports.TextConditions = TextConditions = {}));
var ShapeDataConditions;
(function (ShapeDataConditions) {
    ShapeDataConditions[ShapeDataConditions["TextEmpty"] = 0] = "TextEmpty";
    ShapeDataConditions[ShapeDataConditions["TextNotEmpty"] = 1] = "TextNotEmpty";
    ShapeDataConditions[ShapeDataConditions["TextContains"] = 2] = "TextContains";
    ShapeDataConditions[ShapeDataConditions["TextDoesNotContain"] = 3] = "TextDoesNotContain";
    /** @deprecated */ ShapeDataConditions[ShapeDataConditions["TextEquals"] = 4] = "TextEquals";
    /** @deprecated */ ShapeDataConditions[ShapeDataConditions["TextNotEqual"] = 5] = "TextNotEqual";
    ShapeDataConditions[ShapeDataConditions["TextStartsWith"] = 6] = "TextStartsWith";
    ShapeDataConditions[ShapeDataConditions["TextEndsWith"] = 7] = "TextEndsWith";
    ShapeDataConditions[ShapeDataConditions["GreaterThan"] = 8] = "GreaterThan";
    ShapeDataConditions[ShapeDataConditions["GreaterThanOrEqual"] = 9] = "GreaterThanOrEqual";
    ShapeDataConditions[ShapeDataConditions["LessThan"] = 10] = "LessThan";
    ShapeDataConditions[ShapeDataConditions["LessThanOrEqual"] = 11] = "LessThanOrEqual";
    ShapeDataConditions[ShapeDataConditions["Equal"] = 12] = "Equal";
    ShapeDataConditions[ShapeDataConditions["NotEqual"] = 13] = "NotEqual";
    ShapeDataConditions[ShapeDataConditions["Between"] = 14] = "Between";
    ShapeDataConditions[ShapeDataConditions["NotBetween"] = 15] = "NotBetween";
})(ShapeDataConditions || (exports.ShapeDataConditions = ShapeDataConditions = {}));
var ShapeTypeConditions;
(function (ShapeTypeConditions) {
    ShapeTypeConditions[ShapeTypeConditions["TextContains"] = 2] = "TextContains";
    ShapeTypeConditions[ShapeTypeConditions["TextDoesNotContain"] = 3] = "TextDoesNotContain";
})(ShapeTypeConditions || (exports.ShapeTypeConditions = ShapeTypeConditions = {}));
var ConnectedShapesCondition;
(function (ConnectedShapesCondition) {
    ConnectedShapesCondition[ConnectedShapesCondition["GreaterThan"] = 8] = "GreaterThan";
    ConnectedShapesCondition[ConnectedShapesCondition["GreaterThanOrEqual"] = 9] = "GreaterThanOrEqual";
    ConnectedShapesCondition[ConnectedShapesCondition["LessThan"] = 10] = "LessThan";
    ConnectedShapesCondition[ConnectedShapesCondition["LessThanOrEqual"] = 11] = "LessThanOrEqual";
    ConnectedShapesCondition[ConnectedShapesCondition["Equal"] = 12] = "Equal";
    ConnectedShapesCondition[ConnectedShapesCondition["NotEqual"] = 13] = "NotEqual";
    ConnectedShapesCondition[ConnectedShapesCondition["Between"] = 14] = "Between";
    ConnectedShapesCondition[ConnectedShapesCondition["NotBetween"] = 15] = "NotBetween";
})(ConnectedShapesCondition || (exports.ConnectedShapesCondition = ConnectedShapesCondition = {}));
var ContainmentConditions;
(function (ContainmentConditions) {
    ContainmentConditions[ContainmentConditions["TextContains"] = 2] = "TextContains";
    ContainmentConditions[ContainmentConditions["TextDoesNotContain"] = 3] = "TextDoesNotContain";
})(ContainmentConditions || (exports.ContainmentConditions = ContainmentConditions = {}));
