"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeCardIntegrationConfig = exports.serializeCardIntegrationConfig = exports.isSerializedCardIntegrationConfig = void 0;
const textstyle_1 = require("../../document/text/textstyle");
const checks_1 = require("../checks");
const validators_1 = require("../validators/validators");
const cardfielddisplaysettings_1 = require("./cardfielddisplaysettings");
exports.isSerializedCardIntegrationConfig = (0, validators_1.objectValidator)({
    'cc': (0, validators_1.objectValidator)({
        'f': (0, checks_1.isTypedArray)(checks_1.isString),
        'fd': (0, validators_1.option)((0, checks_1.isTypedArray)((0, checks_1.isPair)(checks_1.isString, cardfielddisplaysettings_1.isSerializedLucidCardFieldSettings))),
        'fs': (0, validators_1.option)((0, checks_1.isTypedArray)((0, checks_1.isPair)(checks_1.isString, textstyle_1.isPartialTextStyle))),
        'id': (0, validators_1.option)(checks_1.isString),
    }),
    'cdpc': (0, validators_1.objectValidator)({ 'f': (0, checks_1.isTypedArray)((0, validators_1.objectValidator)({ 'n': checks_1.isString, 'l': (0, validators_1.option)(checks_1.isBoolean) })) }),
});
/** @ignore */
function serializeCardIntegrationConfig(config) {
    return {
        'cc': {
            'f': config.cardConfig.fieldNames,
            'fd': config.cardConfig.fieldDisplaySettings
                ? [...config.cardConfig.fieldDisplaySettings].map(([key, settings]) => [
                    key,
                    (0, cardfielddisplaysettings_1.serializeLucidCardFieldDisplaySettings)(settings),
                ])
                : undefined,
            'fs': config.cardConfig.fieldStyles ? [...config.cardConfig.fieldStyles] : undefined,
        },
        'cdpc': {
            'f': config.cardDetailsPanelConfig.fields.map((field) => {
                return {
                    'n': field.name,
                    'l': field.locked,
                };
            }),
        },
    };
}
exports.serializeCardIntegrationConfig = serializeCardIntegrationConfig;
/** @ignore */
function deserializeCardIntegrationConfig(raw) {
    return {
        cardConfig: {
            fieldNames: raw['cc']['f'],
            fieldStyles: raw['cc']['fs'] ? new Map(raw['cc']['fs']) : undefined,
            fieldDisplaySettings: raw['cc']['fd']
                ? new Map(raw['cc']['fd'].map(([key, settings]) => [
                    key,
                    (0, cardfielddisplaysettings_1.deserializeLucidCardFieldDisplaySettings)(settings),
                ]))
                : undefined,
        },
        cardDetailsPanelConfig: {
            fields: raw['cdpc']['f'].map((field) => {
                return {
                    name: field['n'],
                    locked: field['l'],
                };
            }),
        },
    };
}
exports.deserializeCardIntegrationConfig = deserializeCardIntegrationConfig;
