import { TextStyle } from '../../document/text/textstyle';
import { isBoolean, isString } from '../checks';
import { LucidCardFieldDisplaySettings, SerializedLucidCardFieldDisplaySettings } from './cardfielddisplaysettings';
export interface CardIntegrationConfig {
    cardConfig: {
        /**
         * The data fields to be displayed on cards, as data-linked text fields
         */
        fieldNames: string[];
        /**
         * The default text style to set on each of the above fields for new cards. Any style not specified
         * will use a default value, and any field name not present will use all defaults.
         */
        fieldStyles?: Map<string, Partial<TextStyle>>;
        /**
         * The data fields to be displayed on cards as data graphics
         */
        fieldDisplaySettings?: Map<string, LucidCardFieldDisplaySettings>;
    };
    cardDetailsPanelConfig: {
        /**
         * The data fields to be displayed in the details panel of a card
         */
        fields: {
            /**
             * The field name
             */
            name: string;
            /**
             * If true then the visibility of this field in the details panel cannot be modified by a user.
             */
            locked?: boolean;
        }[];
    };
}
/** @ignore */
export type SerializedCardIntegrationConfig = {
    'cc': {
        'f': string[];
        'fd'?: [string, SerializedLucidCardFieldDisplaySettings][] | undefined;
        'fs'?: [string, Partial<TextStyle>][] | undefined;
        'id'?: string | undefined;
    };
    'cdpc': {
        'f': {
            'n': string;
            'l'?: boolean | undefined;
        }[];
    };
};
export declare const isSerializedCardIntegrationConfig: (subject: unknown) => subject is import("../guards").DestructureGuardedTypeObj<{
    cc: (subject: unknown) => subject is import("../guards").DestructureGuardedTypeObj<{
        f: (val: unknown) => val is string[];
        fd: (x: unknown) => x is [string, import("../guards").DestructureGuardedTypeObj<{
            StencilConfig: (x: unknown) => x is import("../guards").DestructureGuardedTypeObj<{
                getterKey: (x: unknown) => x is import("./cardfielddisplaysettings").FieldDisplayType;
                fg: (x: unknown) => x is string | undefined;
                bg: (x: unknown) => x is string | undefined;
                f: (x: unknown) => x is string | undefined;
                t: (x: unknown) => x is string | undefined;
                l: (x: unknown) => x is string | undefined;
                h: (x: unknown) => x is import("../..").HorizontalBadgePos | undefined;
                v: (x: unknown) => x is import("../..").VerticalBadgePos | undefined;
                onClickHandlerKey: (x: unknown) => x is import("./cardfielddisplaysettings").OnClickHandlerKeys | undefined;
                imageBadgeSettings: (x: unknown) => x is import("../guards").DestructureGuardedTypeObj<{
                    height: typeof import("../checks").isNumber;
                    width: typeof import("../checks").isNumber;
                }> | undefined;
                textBadgeSettings: (x: unknown) => x is import("../guards").DestructureGuardedTypeObj<{
                    bold: (x: unknown) => x is boolean | undefined;
                    italic: (x: unknown) => x is boolean | undefined;
                    underline: (x: unknown) => x is boolean | undefined;
                    rounding: (x: unknown) => x is number | undefined;
                    minwidth: (x: unknown) => x is number | undefined;
                    minheight: (x: unknown) => x is number | undefined;
                    maxfontsize: (x: unknown) => x is number | undefined;
                    maxtextwidth: (x: unknown) => x is number | undefined;
                    iswithinpill: (x: unknown) => x is boolean | undefined;
                    usingcarduirefresh: (x: unknown) => x is boolean | undefined;
                    hasleadingicon: (x: unknown) => x is boolean | undefined;
                }> | undefined;
            }> | undefined;
        }>][] | undefined;
        fs: (x: unknown) => x is [string, Partial<import("../guards").DestructureGuardedTypeObj<{
            font: typeof isString;
            bold: typeof isBoolean;
            italic: typeof isBoolean;
            underline: typeof isBoolean;
            size: typeof import("../checks").isNumber;
            color: typeof isString;
            align: typeof isString;
        }>>][] | undefined;
        id: (x: unknown) => x is string | undefined;
    }>;
    cdpc: (subject: unknown) => subject is import("../guards").DestructureGuardedTypeObj<{
        f: (val: unknown) => val is import("../guards").DestructureGuardedTypeObj<{
            n: typeof isString;
            l: (x: unknown) => x is boolean | undefined;
        }>[];
    }>;
}>;
/** @ignore */
export declare function serializeCardIntegrationConfig(config: CardIntegrationConfig): SerializedCardIntegrationConfig;
/** @ignore */
export declare function deserializeCardIntegrationConfig(raw: SerializedCardIntegrationConfig): CardIntegrationConfig;
