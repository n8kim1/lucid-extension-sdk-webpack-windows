/**
 * Aspect ratio 16:9, wider rectangle
 * This will be the default setting if not provided
 *
 * The values are small since we only use width and height value to calculate aspect ratio
 * So in this case, it will be width/height, which will be 16:9
 * It's the same result as 1600 and 900 as default width and height
 */
export declare const DEFAULT_IFRAME_WIDTH: number;
export declare const DEFAULT_IFRAME_HEIGHT: number;
/** @ignore */
export type IframeAttributes = 
/**
 * This type syntax makes it so either src or srcdoc is always provided, but never both.
 */
({
    /**
     * The source url
     */
    src: string;
    srcdoc?: undefined;
} | {
    /**
     * The html content of the iframe if not using a source url
     */
    srcdoc: string;
    src?: undefined;
}) & {
    /**
     * The iFrame height
     */
    height?: number;
    /**
     * The iFrame width
     */
    width?: number;
    /**
     * The iFrame title for accessibility
     */
    title?: string;
};
/**
 * Generate iframe HTML from the IFrameAttributes object
 * @returns the generated iframe HTML
 * @ignore
 * */
export declare function generateIFrameHTML(iframeAttributes: IframeAttributes): string;
/**
 * Parse the iframe HTML, i.e. <iframe>...</iframe> into the IFrameAttributes object
 * @returns the required attributes to render the target iframe
 * @ignore
 */
export declare function parseIFrameAttributesFromHTML(iframeHTML: string): IframeAttributes;
