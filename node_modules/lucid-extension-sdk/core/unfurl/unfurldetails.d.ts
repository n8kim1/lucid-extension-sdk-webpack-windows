import { isString } from '../checks';
import { SerializedUnfurlIframe, UnfurlIframe } from './unfurliframe';
import { SerializedUnfurlThumbnail, UnfurlThumbnail } from './unfurlthumbnail';
/**
 * A definition of the details required to show an unfurl block in the editor.
 */
export interface UnfurlDetails {
    /**
     * The name of the extension attributed to the unfurl. This is a user facing name that is used to attribute the
     * unfurl to a specific third party.
     */
    providerName: string;
    /**
     * The favicon of the provider of this unfurl.
     */
    providerFaviconUrl: string;
    /**
     * The title associated with the link being unfurled. For example, the document or web page title.
     */
    unfurlTitle?: string;
    /**
     * If the unfurl supports an expandable iframe, this configuration defines its properties.
     */
    iframe?: UnfurlIframe;
    /**
     * If the unfurl contains one or more images, this configuration defines those properties.
     */
    thumbnails?: UnfurlThumbnail[];
    /**
     * The url to show if there are no thumbnails.
     *
     * This can be useful to show an initial image while using other mechanisms to add all thumbnails after the unfurl is created.
     */
    previewImageUrl?: string;
}
/** @ignore */
export interface SerializedUnfurlDetails {
    'ProviderName': string;
    'ProviderFaviconUrl': string;
    'UnfurlTitle'?: string | undefined;
    'Iframe'?: SerializedUnfurlIframe | undefined;
    'Thumbnails'?: SerializedUnfurlThumbnail[] | undefined;
    'PreviewImageUrl'?: string | undefined;
}
/** @ignore */
export declare const isValidUnfurlDetails: (subject: unknown) => subject is import("../guards").DestructureGuardedTypeObj<{
    ProviderName: typeof isString;
    ProviderFaviconUrl: typeof isString;
    UnfurlTitle: (x: unknown) => x is string | undefined;
    Iframe: (x: unknown) => x is import("../guards").DestructureGuardedTypeObj<{
        IframeUrl: typeof isString;
        AspectRatio: (x: unknown) => x is import("./unfurliframe").UnfurlIframeAspectRatio | undefined;
        IframeTitle: (x: unknown) => x is string | undefined;
    }> | undefined;
    Thumbnails: (x: unknown) => x is import("../guards").DestructureGuardedTypeObj<{
        url: typeof isString;
        width: (x: unknown) => x is number | null | undefined;
        height: (x: unknown) => x is number | null | undefined;
    }>[] | undefined;
    PreviewImageUrl: (x: unknown) => x is string | undefined;
}>;
/** @ignore */
export declare function deserializeUnfurlDetails(raw: SerializedUnfurlDetails): UnfurlDetails;
/** @ignore */
export declare function serializeUnfurlDetails(concrete: UnfurlDetails): SerializedUnfurlDetails;
