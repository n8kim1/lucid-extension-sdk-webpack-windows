"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateIframeAttributes = exports.getIFrameWidth = exports.getIFrameHeight = exports.serializeUnfurlIframe = exports.deserializeUnfurlIframe = exports.isValidUnfurlIframe = exports.UnfurlIframeAspectRatio = void 0;
const checks_1 = require("../checks");
const iframeutils_1 = require("../iframe/iframeutils");
const validators_1 = require("../validators/validators");
/**
 * An enumeration of of the supported unfurl Iframe aspect ratio.
 * The iframe will be maximized to fit the screen responsively
 */
var UnfurlIframeAspectRatio;
(function (UnfurlIframeAspectRatio) {
    /**
     * Aspect ratio 1:1, square
     */
    UnfurlIframeAspectRatio["Square"] = "1:1";
    /**
     * Aspect ratio 16:9, wider rectangle
     * This will be the default setting if not provided
     */
    UnfurlIframeAspectRatio["SixteenToNine"] = "16:9";
    /**
     * Aspect ratio 9:16, taller rectangle
     */
    UnfurlIframeAspectRatio["NineToSixteen"] = "9:16";
    /**
     * Aspect ratio 4:3, wider rectangle
     */
    UnfurlIframeAspectRatio["FourToThree"] = "4:3";
    /**
     * Aspect ratio 3:4, taller rectangle
     */
    UnfurlIframeAspectRatio["ThreeToFour"] = "3:4";
})(UnfurlIframeAspectRatio || (exports.UnfurlIframeAspectRatio = UnfurlIframeAspectRatio = {}));
/** @ignore */
exports.isValidUnfurlIframe = (0, validators_1.objectValidator)({
    'IframeUrl': checks_1.isString,
    'AspectRatio': (0, validators_1.option)((0, validators_1.stringEnumValidator)(UnfurlIframeAspectRatio)),
    'IframeTitle': (0, validators_1.option)(checks_1.isString),
});
/** @ignore */
function deserializeUnfurlIframe(raw) {
    return {
        iframeUrl: raw['IframeUrl'],
        aspectRatio: raw['AspectRatio'],
        iframeTitle: raw['IframeTitle'],
    };
}
exports.deserializeUnfurlIframe = deserializeUnfurlIframe;
/** @ignore */
function serializeUnfurlIframe(concrete) {
    return {
        'IframeUrl': concrete.iframeUrl,
        'AspectRatio': concrete.aspectRatio,
        'IframeTitle': concrete.iframeTitle,
    };
}
exports.serializeUnfurlIframe = serializeUnfurlIframe;
/** @ignore */
function getIFrameHeight(unfurlIframeAspectRatio) {
    switch (unfurlIframeAspectRatio) {
        case UnfurlIframeAspectRatio.Square:
            return 1;
        case UnfurlIframeAspectRatio.SixteenToNine:
            return 9;
        case UnfurlIframeAspectRatio.NineToSixteen:
            return 16;
        case UnfurlIframeAspectRatio.FourToThree:
            return 3;
        case UnfurlIframeAspectRatio.ThreeToFour:
            return 4;
        default:
            return 9;
    }
}
exports.getIFrameHeight = getIFrameHeight;
/** @ignore */
function getIFrameWidth(unfurlIframeAspectRatio) {
    switch (unfurlIframeAspectRatio) {
        case UnfurlIframeAspectRatio.Square:
            return 1;
        case UnfurlIframeAspectRatio.SixteenToNine:
            return 16;
        case UnfurlIframeAspectRatio.NineToSixteen:
            return 9;
        case UnfurlIframeAspectRatio.FourToThree:
            return 4;
        case UnfurlIframeAspectRatio.ThreeToFour:
            return 3;
        default:
            return 16;
    }
}
exports.getIFrameWidth = getIFrameWidth;
function generateIframeAttributes(unfurlIframe) {
    const iframeAttributes = {
        src: unfurlIframe.iframeUrl,
        height: unfurlIframe.aspectRatio ? getIFrameHeight(unfurlIframe.aspectRatio) : iframeutils_1.DEFAULT_IFRAME_HEIGHT,
        width: unfurlIframe.aspectRatio ? getIFrameWidth(unfurlIframe.aspectRatio) : iframeutils_1.DEFAULT_IFRAME_WIDTH,
        title: unfurlIframe.iframeTitle,
    };
    return iframeAttributes;
}
exports.generateIframeAttributes = generateIframeAttributes;
