/**
 * Lucid Fields serve as standardized categories that transcend individual data source labels, facilitating
 * a uniform way to access and manipulate data. For instance, regardless of the source, data that pertains to "titles"
 * or "user information" often carries the same kind of information, though it may be labeled differently across systems.
 * Lucid Fields ensure that such data is recognized and treated consistently within the platform,
 * regardless of external labeling conventions.
 *
 * Semantic Mapping is the process through which Lucid aligns these disparate field names to a set of standardized
 * Lucid Fields. By using Lucid Fields like Title, Description, User, and Project, Lucid simplifies the way
 * users access and interact with data brought in from external sources.
 *
 * Benefits of Lucid Fields:
 * Uniformity: Ensures that data from diverse sources is referenced consistently within Lucid.
 * Integration Simplicity: Simplifies the process of integrating new data sources into Lucid by mapping to an established set of Lucid Fields.
 * Feature Compatibility: Allows for seamless use of Lucid’s intelligent features across all data, regardless of its origin.
 * Data Organization: Provides a structured approach to organizing and grouping data within the Lucid ecosystem.
 *
 * Must be kept in sync with src/jvm/com/lucidchart/data/model/fielddefinition/LucidFields.scala
 */
export declare enum LucidFields {
    /**
     * Represents the title or main descriptor of an item.
     */
    Title = "title",
    /**
     * Captures detailed information or a summary about an item.
     */
    Description = "description",
    /**
     * Refers to the user associated with or assigned to an item.
     */
    User = "user",
    /**
     * Specific to the reporting user, typically in the context of a ticketing system.
     */
    Reporter = "user.reporter",
    /**
     * Refers to the time associated with an item.
     */
    Time = "time",
    /**
     * Pertains to the ending or completion time of an item.
     */
    EndTime = "time.endtime",
    /**
     * Contains estimations related to items, like time or resource estimates.
     */
    Estimate = "estimate",
    /**
     * Reflects status of an item, typically in the context of a ticketing system.
     */
    Status = "status",
    /**
     * Classifies the type of issue or item, typically in the context of a ticketing system.
     */
    IssueType = "issuetype",
    /**
     * Indicates the importance or urgency level of an item.
     */
    Priority = "priority",
    /**
     * Relates to the project with which an item is associated.
     */
    Project = "project",
    /**
     * The unique URL or identifier linking back to the item’s source.
     */
    SourceItemUrl = "url",
    /**
     * Refers to the URL of the image associated with this item
     */
    ImageUrl = "url.image",
    /**
     * Represents the sprint or time interval this item is assigned to.
     */
    Sprint = "sprint",
    /**
     * Refers to the team associated with or responsible for this item.
     */
    Team = "team",
    /**
     * Refers to the parent item this item belongs to.
     */
    Parent = "parent"
}
export declare const isLucidFields: (x: unknown) => x is LucidFields;
