import { FieldTypeDefinition } from './fieldtypedefinition';
export declare const CollectionEnumFieldTypeKey = "COLLECTION_ENUM";
/**
 * Contains the field names of all valid fields for a groovy metadata collection.
 *
 * This should be kept in sync with GroovyFieldNames in FieldType.scala
 */
export declare enum CollectionEnumFieldNames {
    Name = "name",
    Id = "id",
    Description = "description",
    Color = "color",
    IconUrl = "iconUrl"
}
export declare const isCollectionEnumFieldNames: (x: unknown) => x is CollectionEnumFieldNames;
export declare class CollectionEnumFieldType {
    readonly collectionId: string;
    /**
     * Specifies which groovy field name is used as the primary key.
     *
     * This should be kept in sync with GroovyFieldNames in FieldType.scala
     */
    static readonly PRIMARY_KEY = CollectionEnumFieldNames.Id;
    constructor(collectionId: string);
    toJSON(): SerializedCollectionEnumFieldType;
}
export declare const isCollectionEnumFieldType: (fieldType: FieldTypeDefinition) => fieldType is CollectionEnumFieldType;
export type SerializedCollectionEnumFieldType = {
    [CollectionEnumFieldTypeKey]: string;
};
export declare function deserializeCollectionEnumFieldType(serializedCollectionEnumFieldType: SerializedCollectionEnumFieldType): CollectionEnumFieldType;
export declare function isSerializedCollectionEnumFieldType(fieldType: any): fieldType is SerializedCollectionEnumFieldType;
