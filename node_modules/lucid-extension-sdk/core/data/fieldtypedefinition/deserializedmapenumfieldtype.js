"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeEnumEntry = exports.serializeEnumEntry = exports.isSerializedEnumEntry = exports.isSerializedMapEnumFieldType = exports.isDeserializedMapEnumFieldType = exports.DeserializedMapEnumFieldType = void 0;
const checks_1 = require("../../checks");
const validators_1 = require("../../validators/validators");
class DeserializedMapEnumFieldType {
    constructor(validEntries) {
        this.validEntries = validEntries;
    }
    toJSON() {
        return {
            'ValidItems': [...this.validEntries.entries()].map(([key, value]) => serializeEnumEntry(key, value)),
        };
    }
    static fromJSON(val) {
        return new DeserializedMapEnumFieldType(new Map(val['ValidItems'].map(deserializeEnumEntry)));
    }
}
exports.DeserializedMapEnumFieldType = DeserializedMapEnumFieldType;
function isDeserializedMapEnumFieldType(val) {
    return val instanceof DeserializedMapEnumFieldType;
}
exports.isDeserializedMapEnumFieldType = isDeserializedMapEnumFieldType;
function isSerializedMapEnumFieldType(fieldType) {
    return ((0, checks_1.isObjectUnsafe)(fieldType) &&
        Array.isArray(fieldType['ValidItems']) &&
        fieldType['ValidItems'].every(isSerializedEnumEntry));
}
exports.isSerializedMapEnumFieldType = isSerializedMapEnumFieldType;
function isSerializedEnumEntry(entry) {
    return ((0, checks_1.isObjectUnsafe)(entry) &&
        (0, checks_1.isString)(entry['Id']) &&
        (0, validators_1.nullableOption)(checks_1.isString)(entry['Name']) &&
        (0, validators_1.nullableOption)(checks_1.isString)(entry['Description']) &&
        (0, validators_1.nullableOption)(checks_1.isString)(entry['Color']) &&
        (0, validators_1.nullableOption)(checks_1.isString)(entry['IconUrl']));
}
exports.isSerializedEnumEntry = isSerializedEnumEntry;
function serializeEnumEntry(id, entry) {
    return {
        'Id': id,
        'Name': entry.name,
        'Description': entry.description,
        'Color': entry.color,
        'IconUrl': entry.iconUrl,
    };
}
exports.serializeEnumEntry = serializeEnumEntry;
function deserializeEnumEntry(entry) {
    return [
        entry['Id'],
        {
            name: entry['Name'],
            description: entry['Description'],
            color: entry['Color'],
            iconUrl: entry['IconUrl'],
        },
    ];
}
exports.deserializeEnumEntry = deserializeEnumEntry;
