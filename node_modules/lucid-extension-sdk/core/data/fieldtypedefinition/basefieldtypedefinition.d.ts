import { CollectionEnumFieldType, SerializedCollectionEnumFieldType } from './collectionenumfieldtype';
import { DeserializedMapEnumFieldType, SerializedMapEnumFieldType } from './deserializedmapenumfieldtype';
import { FieldTypeArray, SerializedFieldTypeArray } from './fieldtypearray';
import { LiteralFieldType, SerializedLiteralFieldType } from './literalfieldtype';
import { NDimensionalFieldTypeArray, SerializedNDimensionalFieldTypeArray } from './ndimensionalfieldtypearray';
import { ScalarFieldTypeEnum } from './scalarfieldtype';
export type AnyFieldTypeArrayDefinition = FieldTypeArray | NDimensionalFieldTypeArray;
export type BaseFieldTypeDefinition = ScalarFieldTypeEnum | LiteralFieldType | FieldTypeArray<any> | NDimensionalFieldTypeArray | CollectionEnumFieldType | DeserializedMapEnumFieldType;
export type SerializedBaseFieldTypeDefinition = ScalarFieldTypeEnum | SerializedLiteralFieldType | SerializedFieldTypeArray | SerializedNDimensionalFieldTypeArray | SerializedCollectionEnumFieldType | SerializedMapEnumFieldType;
export declare function isBaseFieldTypeDefinition(fieldType: any): fieldType is BaseFieldTypeDefinition;
export declare function serializeBaseFieldTypeDefinition(baseFieldType: BaseFieldTypeDefinition): SerializedBaseFieldTypeDefinition;
export declare function deserializeBaseFieldTypeDefinition(baseFieldType: SerializedBaseFieldTypeDefinition): BaseFieldTypeDefinition;
export declare function isSerializedBaseFieldTypeDefinition(definition: any): definition is SerializedBaseFieldTypeDefinition;
