import { isNumber, isString } from '../../checks';
export type SerializedFieldType = number | boolean | string | null | SerializedLucidDateObject | SerializedTimeObject | SerializedColorObjectFieldType | SerializedLucidDictionary | SerializedLucidCurrency | undefined | Array<SerializedFieldType>;
export type SerializedJsonFieldType = number | boolean | string | null | undefined | Array<SerializedJsonFieldType> | {
    [index: string]: SerializedJsonFieldType;
};
export type JSONSerializedLucidDictionary = {
    'js': {
        [index: string]: SerializedJsonFieldType;
    };
};
export type NestedSerializedLucidDictionary = {
    'dict': {
        [index: string]: SerializedFieldType;
    };
};
export type SerializedLucidDictionary = NestedSerializedLucidDictionary | JSONSerializedLucidDictionary;
export type SerializedLucidCurrency = {
    'a': number;
    't': string;
};
export type SerializedFields = {
    [fieldName: string]: SerializedFieldType;
};
export type SerializedIsoDateObject = {
    'isoDate': string;
    'displayTimezone'?: string | null;
};
export type SerializedMillisecondsDateObject = {
    'ms': number;
    'isDateOnly'?: boolean;
};
export type SerializedLucidDateObject = SerializedMillisecondsDateObject | SerializedIsoDateObject;
export type SerializedTimeObject = {
    'hours': number;
    'minutes'?: number | undefined;
    'seconds'?: number | undefined;
    'milliseconds'?: number | undefined;
};
export type SerializedRGBColor = {
    'r': number;
    'g': number;
    'b': number;
    'a'?: number;
    't'?: number;
    'c'?: undefined;
    'm'?: undefined;
    'y'?: undefined;
    'k'?: undefined;
};
export type SerializedCMYKColor = {
    'c': number;
    'm': number;
    'y': number;
    'k': number;
    'a'?: number;
    't'?: number;
    'r'?: undefined;
    'g'?: undefined;
    'b'?: undefined;
};
export type SerializedCorrectedColor = {
    'cR': number;
    'cG': number;
    'cB': number;
};
export type SerializedColorObject = SerializedRGBColor | SerializedCMYKColor | (SerializedCMYKColor & SerializedCorrectedColor);
export type SerializedColorObjectFieldType = {
    'color': SerializedColorObject;
};
export declare function isSerializedColorObjectFieldType(value: any): value is SerializedColorObjectFieldType;
/** a dictionary type that has full type support */
export declare const isNestedSerializedLucidDictionary: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    dict: (x: unknown) => x is {
        [key: string]: SerializedFieldType;
    };
}>;
/** a dictionary type that only supports raw js, primarily used when external data could be arbritrary js */
export declare const isJsonSerializedLucidDictionary: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    js: (x: unknown) => x is {
        [key: string]: SerializedJsonFieldType;
    };
}>;
export declare const isSerializedLucidDictionary: (x: unknown) => x is import("../../guards").DestructureGuardedTypeObj<{
    dict: (x: unknown) => x is {
        [key: string]: SerializedFieldType;
    };
}> | import("../../guards").DestructureGuardedTypeObj<{
    js: (x: unknown) => x is {
        [key: string]: SerializedJsonFieldType;
    };
}>;
export declare const isSerializedLucidCurrency: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    a: typeof isNumber;
    t: typeof isString;
}>;
export declare const isSerializedMillisecondsDateObject: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    ms: typeof isNumber;
    isDateOnly: (x: unknown) => x is boolean | undefined;
}>;
export declare const isSerializedIsoDateObject: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    isoDate: typeof isString;
    displayTimezone: (x: unknown) => x is string | null | undefined;
}>;
export declare const isSerializedLucidDateObject: (x: unknown) => x is import("../../guards").DestructureGuardedTypeObj<{
    ms: typeof isNumber;
    isDateOnly: (x: unknown) => x is boolean | undefined;
}> | import("../../guards").DestructureGuardedTypeObj<{
    isoDate: typeof isString;
    displayTimezone: (x: unknown) => x is string | null | undefined;
}>;
export declare const isSerializedTimeObject: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    hours: typeof isNumber;
    minutes: (x: unknown) => x is number | undefined;
    seconds: (x: unknown) => x is number | undefined;
}>;
export declare function isSerializedFieldType(value: any): value is SerializedFieldType;
export declare function isSerializedJsonFieldType(value: any): value is SerializedJsonFieldType;
export declare const isSerializedFields: (x: unknown) => x is Record<any, SerializedFieldType>;
