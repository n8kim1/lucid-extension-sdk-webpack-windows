import { isString } from '../../checks';
export type SerializedSourceForeignKey = {
    'Id': string;
    'SourceFields': string[];
    'RelationshipType'?: string | undefined;
    'Represents'?: string | null | undefined;
    'OutwardLabel': string;
    'InwardLabel': string;
    /**
     * This exists to handle the rare situation when there are fields on the target item that reference the source item.
     * Please reach out to #dev-data-platform before setting this to a defined value.
     */
    'TargetFields'?: string[] | undefined;
};
export declare const isSerializedSourceForeignKey: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    Id: typeof isString;
    SourceFields: (p1: unknown) => p1 is string[];
    RelationshipType: (x: unknown) => x is string | undefined;
    OutwardLabel: typeof isString;
    InwardLabel: typeof isString;
}>;
