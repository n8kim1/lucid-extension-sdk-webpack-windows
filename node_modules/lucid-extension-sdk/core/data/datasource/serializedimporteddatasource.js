"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSerializedPreviewData = exports.isSerializedImportedDataSource = exports.isSerializedImportedCollection = exports.isSerializedImportedMetadataCollection = void 0;
const checks_1 = require("../../checks");
const validators_1 = require("../../validators/validators");
const serializeddataitems_1 = require("../serializedfield/serializeddataitems");
const serializedschema_1 = require("../serializedfield/serializedschema");
const serializeddatasourceproperties_1 = require("./serializeddatasourceproperties");
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
exports.isSerializedImportedMetadataCollection = (0, validators_1.strictObjectValidator)({
    'Name': checks_1.isString,
    'Schema': serializedschema_1.isSerializedSchema,
    'Items': serializeddataitems_1.isSerializedDataItems,
});
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
exports.isSerializedImportedCollection = (0, validators_1.strictObjectValidator)({
    'Name': checks_1.isString,
    'Schema': serializedschema_1.isSerializedSchema,
    'Items': serializeddataitems_1.isSerializedDataItems,
    'UpstreamConfig': checks_1.isObject,
    'Metadata': (0, checks_1.isRecord)(exports.isSerializedImportedMetadataCollection),
    'DataIsPartial': (0, validators_1.option)(validators_1.isTrue),
});
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
exports.isSerializedImportedDataSource = (0, validators_1.strictObjectValidator)({
    'Properties': serializeddatasourceproperties_1.isSerializedDataSourceProperties,
    'Collections': (0, checks_1.isTypedArray)(exports.isSerializedImportedCollection),
});
exports.isSerializedPreviewData = (0, validators_1.strictObjectValidator)({
    'Properties': serializeddatasourceproperties_1.isSerializedDataSourceProperties,
    'Collections': (0, checks_1.isTypedArray)((0, validators_1.strictObjectValidator)({
        'Data': exports.isSerializedImportedCollection,
        'HeaderRow': (0, validators_1.option)(checks_1.isNumber),
        'PrimaryKey': (0, validators_1.option)((0, checks_1.isTypedArray)(checks_1.isNumber)),
    })),
});
