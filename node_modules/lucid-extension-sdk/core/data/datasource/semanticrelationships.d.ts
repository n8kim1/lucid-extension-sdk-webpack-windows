/**
 * Semantic Relationships serve as standardized categories of relationships which exist in multiple data sources but potentially under different names.
 * For instance, regardless of the data source, relationships that pertains to parent/child structures can be categorized under the Semantic Relationship "IsParentOf" and "IsChildOf".
 *
 * Benefits of Semantic Relationships:
 * Uniformity: Ensures that data from diverse sources is referenced consistently within Lucid.
 * Integration Simplicity: Simplifies the process of integrating new data sources into Lucid by mapping to an established set of Semantic Relationships.
 * Feature Compatibility: Allows for seamless use of Lucidâ€™s intelligent features across all data, regardless of its origin.
 * Data Organization: Provides a structured approach to organizing and grouping data within the Lucid ecosystem.
 */
export declare enum SemanticRelationships {
    RelatesTo = "Relates To",
    Duplicates = "Duplicates",
    IsDuplicatedBy = "Is Duplicated By",
    Blocks = "Blocks",
    IsBlockedBy = "Is Blocked By",
    Clones = "Clones",
    IsClonedBy = "Is Cloned By",
    IsParentOf = "Is Parent Of",
    IsChildOf = "Is Child Of"
}
export declare function getInverseSemanticRelationship(relationship: SemanticRelationships): SemanticRelationships;
export declare const isSemanticRelationship: (x: unknown) => x is SemanticRelationships;
