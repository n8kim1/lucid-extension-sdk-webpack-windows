import { EditorClient } from '../../editorclient';
import { BlockProxy } from '../blockproxy';
export type CustomBlockProxyConstructor = typeof BlockProxy & {
    library: string;
    shape: string;
};
/**
 * Custom shapes defined in extension packages (or other stencil-providing means like Visio stencil imports)
 * are represented by a CustomBlockProxy.
 */
export declare class CustomBlockProxy extends BlockProxy {
    static classNameRegex: RegExp;
    private static subclassRegistry;
    static registerCustomBlockClass(klass: CustomBlockProxyConstructor): void;
    /**
     * @ignore
     */
    static getCustomBlockClass(client: EditorClient, id: string): CustomBlockProxyConstructor | typeof CustomBlockProxy;
    isFromStencil(library: string, shape: string): boolean;
    getCustomShapeType(): {
        packageId: import("../..").JsonSerializable;
        library: import("../..").JsonSerializable;
        shape: import("../..").JsonSerializable;
    };
    getStencilTextAreaName(stencilTextAreaName: string): string | undefined;
}
