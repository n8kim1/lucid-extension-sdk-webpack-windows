import { SimpleFillStyle } from '../../core/properties/fillcolor';
import { Box } from '../../math';
import { BlockProxy } from '../blockproxy';
export declare class SwimLanePrimaryLaneProxy {
    readonly swimlane: SwimLaneBlockProxy;
    readonly index: number;
    constructor(swimlane: SwimLaneBlockProxy, index: number);
    /**
     * For horizontal lanes, the lane height.
     * For vertical lanes, the lane width.
     */
    getSize(): number;
    getBoundingBox(): {
        x: number;
        y: number;
        w: number;
        h: number;
    };
    private getTitleTextAreaId;
    getTitle(): string;
    setTitle(title: string): undefined;
    setFill(fill: SimpleFillStyle): void;
}
export declare class SwimLaneBlockProxy extends BlockProxy {
    static classNameRegex: RegExp;
    getPrimaryLaneSizes(): number[];
    setPrimaryLaneSizes(sizes: number[]): void;
    getPrimaryLanes(): SwimLanePrimaryLaneProxy[];
    getPrimaryLanesVertical(): boolean;
    getMagnetized(): boolean;
    setMagnetized(magnetize: boolean): void;
    /** @ignore */
    updateTextAreaNames(): void;
    /**
     * Swim lanes only use the normal BoundingBox property for location.
     * For size, it uses the PrimaryLane and SecondaryLane properties.
     */
    setBoundingBox(bb: Box): void;
}
