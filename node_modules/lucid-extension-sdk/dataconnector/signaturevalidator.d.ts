import { CryptoDependencies } from './cryptodependencies';
/**
 * Allows validation that requests originated from Lucid. This class can only be instanciated in a NodeJS environment.
 * Technically any environment that provides NodeJS compatible implementations of `globalThis.Buffer` and
 * `globalThis.require('crypto')` will work.
 */
export declare class SignatureValidator {
    private readonly dependencies;
    private readonly publicKey;
    constructor(dependencies: CryptoDependencies, publicKey: string);
    /**
     * Validate a given request came from Lucid.
     * @param body The body of the request as a plain JavaScript object. This should be JSON.parse called on exactly the
     *             request body that came from Lucid.
     * @param headers The headers that are associated with the request. Only 'x-lucid-rsa-nonce' and 'x-lucid-signature'
     *                are required.
     * @param url     The url of the current endpoint that is being requested.
     * @returns true if the request is valid
     */
    validate(body: unknown, headers: {
        ['x-lucid-rsa-nonce']: string;
        ['x-lucid-signature']: string;
    }, url: string): boolean;
}
/** Mock signature validator, always returns true. */
export declare class MockSignatureValidator {
    validate(): boolean;
}
