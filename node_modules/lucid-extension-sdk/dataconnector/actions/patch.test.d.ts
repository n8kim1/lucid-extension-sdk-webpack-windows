import { SerializedSchema } from '../../core/data/serializedfield/serializedschema';
import { ItemPatch, Patch } from './patch';
export declare function uuid(): string;
export declare function getRandomEmptyPatch(optSyncSourceId?: string, optSyncCollectionId?: string): Patch;
type Range = number | [number, number];
export interface RandomPatchSettings {
    previousDependency: number;
    deleteFrequency: number;
    addedIds: Range;
    changedIds: Range;
    changeDensity: number;
    deletedIds: Range;
    schema: SerializedSchema | Range;
    orderedAnchors?: undefined | Range;
}
export declare function getRandomItemPatch(settings: RandomPatchSettings, previousPatches: ItemPatch[], optSyncSourceId?: string, optSyncCollectionId?: string): ItemPatch;
/**
 * When we use raw JSON.stringify on objects, it can depend in subtle ways how the object was created. This
 * function is intended to make the resulting string depend only on the logical contents so as to minimize unneeded
 * refreshes.
 *
 * @param data The Sheet-type to stringify
 * @returns A custom stringified object
 */
export declare function orderedStringify(data: unknown): string;
export declare function patchesEqual(patchA: Patch, patchB: Patch): boolean;
export {};
