"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReferenceKeyProxy = void 0;
const serializedreferencekey_1 = require("../core/data/referencekeys/serializedreferencekey");
const collectionproxy_1 = require("./collectionproxy");
const referencekeydefinition_1 = require("./referencekeydefinition");
class ReferenceKeyProxy {
    constructor(elementId, key, client, settings) {
        this.elementId = elementId;
        this.key = key;
        this.client = client;
        this.settings = settings;
    }
    get collectionId() {
        if ((0, serializedreferencekey_1.isSerializedFlattenedReference)(this.settings)) {
            return undefined;
        }
        return this.settings['cid'];
    }
    get primaryKey() {
        if ((0, serializedreferencekey_1.isSerializedFlattenedReference)(this.settings)) {
            return undefined;
        }
        return this.settings['pk'];
    }
    get definition() {
        return (0, referencekeydefinition_1.parseReferenceKeyDefinition)(this.settings);
    }
    getItem() {
        const collectionId = this.collectionId;
        if ((0, serializedreferencekey_1.isSerializedFlattenedReference)(this.settings) || !collectionId) {
            throw new Error('Not implemented for flattened references');
        }
        return new collectionproxy_1.CollectionProxy(collectionId, this.client).items.get(this.settings['pk']);
    }
}
exports.ReferenceKeyProxy = ReferenceKeyProxy;
