import { MapProxy } from '../document/mapproxy';
import { EditorClient } from '../editorclient';
import { CollectionProxy } from './collectionproxy';
/**
 * One data item in a collection, consisting of key-value pairs
 */
export declare class DataItemProxy {
    readonly primaryKey: string;
    readonly collection: CollectionProxy;
    private readonly client;
    /**
     * @param primaryKey The current primary key of the data item. This may change if the fields on the data item change, rendering this proxy inoperable.
     * @param collection The collection that contains this data item.
     * @param client
     */
    constructor(primaryKey: string, collection: CollectionProxy, client: EditorClient);
    /**
     * The fields on this data item, organized by their name.
     */
    readonly fields: MapProxy<string, import("..").SerializedFieldType>;
    /**
     * @returns True if a data item exists in this collection at this primary key
     */
    exists(): boolean;
}
